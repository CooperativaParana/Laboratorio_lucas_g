# Generated by Django 5.2.1 on 2025-06-09 12:13

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Analista",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("nombres", models.CharField(max_length=100)),
                ("apellidos", models.CharField(max_length=100)),
                ("contacto", models.CharField(blank=True, max_length=100, null=True)),
                ("username", models.CharField(max_length=50, unique=True)),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("failed_login_attempts", models.IntegerField(default=0)),
                ("locked_until", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Analista",
                "verbose_name_plural": "Analistas",
                "db_table": "analista",
            },
        ),
        migrations.CreateModel(
            name="Apicultor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=100)),
                ("apellido", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Apicultor",
                "verbose_name_plural": "Apicultores",
                "db_table": "apicultor",
            },
        ),
        migrations.CreateModel(
            name="Tambor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("num_registro", models.CharField(max_length=50, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Tambor",
                "verbose_name_plural": "Tambores",
                "db_table": "tambor",
            },
        ),
        migrations.CreateModel(
            name="Apiario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre_apiario", models.CharField(max_length=100)),
                (
                    "cant_colmenas",
                    models.IntegerField(
                        help_text="Cantidad de colmenas debe ser mayor a 0",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("localidad", models.CharField(max_length=100)),
                (
                    "latitud",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        help_text="Coordenada de latitud",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "longitud",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        help_text="Coordenada de longitud",
                        max_digits=11,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "apicultor",
                    models.ForeignKey(
                        db_column="id_apicultor",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="apiarios",
                        to="modelos.apicultor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Apiario",
                "verbose_name_plural": "Apiarios",
                "db_table": "apiarios",
            },
        ),
        migrations.CreateModel(
            name="Especie",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre_cientifico", models.CharField(max_length=150, unique=True)),
                (
                    "nombre_comun",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("familia", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Especie",
                "verbose_name_plural": "Especies",
                "db_table": "especies",
                "indexes": [
                    models.Index(
                        fields=["nombre_cientifico"], name="idx_especies_nombre"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Muestra",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fecha_extraccion", models.DateField()),
                ("fecha_analisis", models.DateField(blank=True, null=True)),
                (
                    "num_registro",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                ("observaciones", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "analista",
                    models.ForeignKey(
                        db_column="id_analista",
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="muestras",
                        to="modelos.analista",
                    ),
                ),
            ],
            options={
                "verbose_name": "Muestra",
                "verbose_name_plural": "Muestras",
                "db_table": "muestra",
            },
        ),
        migrations.CreateModel(
            name="AnalisisPalinologico",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cantidad_granos",
                    models.IntegerField(
                        help_text="Cantidad de granos de polen",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "marca_especial",
                    models.CharField(
                        blank=True,
                        choices=[("x", "x"), ("#", "#"), ("##", "##")],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "porcentaje",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "especie",
                    models.ForeignKey(
                        db_column="id_especie",
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="analisis_palinologicos",
                        to="modelos.especie",
                    ),
                ),
                (
                    "muestra",
                    models.ForeignKey(
                        db_column="id_muestra",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analisis_palinologicos",
                        to="modelos.muestra",
                    ),
                ),
            ],
            options={
                "verbose_name": "Análisis Palinológico",
                "verbose_name_plural": "Análisis Palinológicos",
                "db_table": "analisis_palinologico",
            },
        ),
        migrations.CreateModel(
            name="MuestraTambor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fecha_asociacion",
                    models.DateField(default=django.utils.timezone.now),
                ),
                (
                    "muestra",
                    models.ForeignKey(
                        db_column="id_muestra",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="modelos.muestra",
                    ),
                ),
                (
                    "tambor",
                    models.ForeignKey(
                        db_column="id_tambor",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="modelos.tambor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Asociación Muestra-Tambor",
                "verbose_name_plural": "Asociaciones Muestra-Tambor",
                "db_table": "muestra_tambor",
            },
        ),
        migrations.AddField(
            model_name="muestra",
            name="tambores",
            field=models.ManyToManyField(
                related_name="muestras",
                through="modelos.MuestraTambor",
                to="modelos.tambor",
            ),
        ),
        migrations.CreateModel(
            name="AnalisisFisicoQuimico",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("color", models.IntegerField(blank=True, null=True)),
                (
                    "humedad",
                    models.DecimalField(
                        blank=True,
                        db_column="Humedad",
                        decimal_places=2,
                        help_text="Porcentaje de humedad",
                        max_digits=5,
                        null=True,
                    ),
                ),
                ("fecha_extraccion", models.DateField()),
                ("fecha_analisis", models.DateField(blank=True, null=True)),
                (
                    "num_registro",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                ("observaciones", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "analista",
                    models.ForeignKey(
                        db_column="id_analista",
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="analisis_fisicoquimicos",
                        to="modelos.analista",
                    ),
                ),
                (
                    "tambor",
                    models.ForeignKey(
                        db_column="id_tambor",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analisis_fisicoquimicos",
                        to="modelos.tambor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Análisis Físico-Químico",
                "verbose_name_plural": "Análisis Físico-Químicos",
                "db_table": "analisis_fisicoquimicos",
            },
        ),
        migrations.CreateModel(
            name="TamborApiario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fecha_asignacion",
                    models.DateField(default=django.utils.timezone.now),
                ),
                (
                    "apiario",
                    models.ForeignKey(
                        db_column="id_apiario",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="modelos.apiario",
                    ),
                ),
                (
                    "tambor",
                    models.ForeignKey(
                        db_column="id_tambor",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="modelos.tambor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Asignación Tambor-Apiario",
                "verbose_name_plural": "Asignaciones Tambor-Apiario",
                "db_table": "tambor_api",
            },
        ),
        migrations.AddField(
            model_name="tambor",
            name="apiarios",
            field=models.ManyToManyField(
                related_name="tambores",
                through="modelos.TamborApiario",
                to="modelos.apiario",
            ),
        ),
        migrations.AddIndex(
            model_name="apiario",
            index=models.Index(fields=["apicultor"], name="idx_apiarios_apicultor"),
        ),
        migrations.AddIndex(
            model_name="analisispalinologico",
            index=models.Index(fields=["muestra"], name="idx_analisis_muestra"),
        ),
        migrations.AddIndex(
            model_name="analisispalinologico",
            index=models.Index(fields=["especie"], name="idx_analisis_especie"),
        ),
        migrations.AlterUniqueTogether(
            name="analisispalinologico",
            unique_together={("muestra", "especie")},
        ),
        migrations.AlterUniqueTogether(
            name="muestratambor",
            unique_together={("muestra", "tambor")},
        ),
        migrations.AddIndex(
            model_name="muestra",
            index=models.Index(fields=["analista"], name="idx_muestra_analista"),
        ),
        migrations.AddIndex(
            model_name="muestra",
            index=models.Index(
                fields=["fecha_extraccion", "fecha_analisis"], name="idx_muestra_fechas"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="tamborapiario",
            unique_together={("tambor", "apiario")},
        ),
    ]
